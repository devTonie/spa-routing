{"ast":null,"code":"var _jsxFileName = \"/Users/raman_simanenkau/Desktop/12-adv-starting-project/frontend/src/pages/EventDetails.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailsPage = () => {\n  _s();\n  const data = useRouteLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailsPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailsPage;\nexport default EventDetailsPage;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailsPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailsPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/raman_simanenkau/Desktop/12-adv-starting-project/frontend/src/pages/EventDetails.js"],"sourcesContent":["import { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\n\nconst EventDetailsPage = () => {\n   const data = useRouteLoaderData();\n    return (\n        <>\n            <EventItem event={data.event} />\n        </>\n    )\n};\n\nexport default EventDetailsPage;\n\nexport const loader = async({request, params}) => {\n    const id = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + id);\n    if(!response.ok){\n        throw json({message: 'Could not fetch details for selected event.'}, { status: 500 })\n    } else {\n        return response;\n    }\n};"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGR,kBAAkB,EAAE;EAChC,oBACIG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACIN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG,iBACjC;AAEX,CAAC;AAACP,EAAA,CAPID,gBAAgB;EAAA,QACNN,kBAAkB;AAAA;AAAAe,EAAA,GAD5BT,gBAAgB;AAStB,eAAeA,gBAAgB;AAE/B,OAAO,MAAMU,MAAM,GAAG,MAAAC,IAAA,IAA4B;EAAA,IAAtB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACzC,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMzB,IAAI,CAAC;MAAC0B,OAAO,EAAE;IAA6C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACzF,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ,CAAC;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}