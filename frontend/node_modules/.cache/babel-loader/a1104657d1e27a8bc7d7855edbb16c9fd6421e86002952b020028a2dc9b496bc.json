{"ast":null,"code":"var _jsxFileName = \"/Users/raman_simanenkau/Desktop/12-adv-starting-project/frontend/src/pages/NewEvent.js\";\nimport { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport const action = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["/Users/raman_simanenkau/Desktop/12-adv-starting-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\n\nconst NewEventPage = () => {\n    return <EventForm />\n};\n\nexport default NewEventPage;\n\nexport const action = async({request, params}) => {\n    const data = await request.formData();\n    const eventData = {\n        title: data.get('title'),\n        image: data.get('image'),\n        date: data.get('date'),\n        description: data.get('description')\n    }\n    const response = fetch('http://localhost:8080/events', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(eventData),\n    });\n\n    if(!response.ok) {\n        throw json({message: 'Could not save event.'}, {status: 500});\n    }\n};"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACxB,CAAC;AAACC,EAAA,GAFIL,YAAY;AAIlB,eAAeA,YAAY;AAE3B,OAAO,MAAMM,MAAM,GAAG,MAAAC,IAAA,IAA4B;EAAA,IAAtB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACzC,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EACrC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EACD,MAAMI,QAAQ,GAAGC,KAAK,CAAC,8BAA8B,EAAE;IACnDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAE;IACb,MAAM7B,IAAI,CAAC;MAAC8B,OAAO,EAAE;IAAuB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACjE;AACJ,CAAC;AAAC,IAAAtB,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}